parameters:
  nightly: false
  afl: false
  extra_docker_args: ""
  container_image: angr/ci:2

jobs:
- job: test_linux
  displayName: Test Linux
  pool:
    vmImage: ubuntu-18.04
  container:
    image: ${{ parameters.container_image }}
    options: --cap-add=SYS_PTRACE --security-opt seccomp:unconfined ${{ parameters.extra_docker_args }}
  variables:
    NUM_WORKERS: 10
    QT_QPA_PLATFORM: minimal
  strategy:
    maxParallel: 10
    matrix:
      worker_0:
        WORKER: 0
      worker_1:
        WORKER: 1
      worker_2:
        WORKER: 2
      worker_3:
        WORKER: 3
      worker_4:
        WORKER: 4
      worker_5:
        WORKER: 5
      worker_6:
        WORKER: 6
      worker_7:
        WORKER: 7
      worker_8:
        WORKER: 8
      worker_9:
        WORKER: 9

  steps:
  - ${{ if eq(parameters.afl, true) }}:
    - task: Bash@3
      displayName: Configure host for AFL
      target: host
      inputs:
        targetType: inline
        script: |
          echo 1 | sudo tee /proc/sys/kernel/sched_child_runs_first
          echo core | sudo tee /proc/sys/kernel/core_pattern

  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: "build_archive"
      targetPath: .

  - ${{ if eq(parameters.nightly, true) }}:
    - script: /root/scripts/azure-test.sh nightly
      displayName: Run nightly tests
  - ${{ if eq(parameters.nightly, false) }}:
    - script: /root/scripts/azure-test.sh
      displayName: Run standard tests

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: "JUnit"
      testResultsFiles: "build/results/*.tests.xml"
      mergeTestResults: true

  - task: PublishCodeCoverageResults@1
    condition: eq(${{ parameters.nightly }}, 'true')
    inputs:
      codeCoverageTool: "cobertura"
      summaryFileLocation: "build/results/*.coverage.xml"
      additionalCodeCoverageFiles: "build/results/*.coverage.xml"
